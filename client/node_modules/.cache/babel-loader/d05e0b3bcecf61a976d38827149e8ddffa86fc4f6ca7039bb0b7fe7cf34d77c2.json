{"ast":null,"code":"var _jsxFileName = \"D:\\\\MERN Project\\\\client\\\\src\\\\pages\\\\IndexPage.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport Post from \"../Post\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function IndexPage() {\n  _s();\n  // creating a state\n  const [posts, setPosts] = useState([]); //default will be an empty array in useState\n\n  useEffect(() => {\n    fetch('http://localhost:4000/post').then(response => {\n      response.json().then(posts => {\n        setPosts(posts);\n      });\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: posts.length > 0 && posts.map(post => /*#__PURE__*/_jsxDEV(Post, {\n      ...post\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 17\n    }, this) //passing all the properties from post to Post component\n    )\n  }, void 0, false);\n}\n_s(IndexPage, \"bG8V4duoIfO0BEPgauWMVT5Qvyw=\");\n_c = IndexPage;\nvar _c;\n$RefreshReg$(_c, \"IndexPage\");","map":{"version":3,"names":["useEffect","useState","Post","jsxDEV","_jsxDEV","Fragment","_Fragment","IndexPage","_s","posts","setPosts","fetch","then","response","json","children","length","map","post","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/MERN Project/client/src/pages/IndexPage.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport Post from \"../Post\";\r\n\r\nexport default function  IndexPage() {\r\n\r\n    // creating a state\r\n    const [posts, setPosts] = useState([]); //default will be an empty array in useState\r\n\r\n    useEffect(() => {\r\n        fetch('http://localhost:4000/post').then(response => {\r\n            response.json().then(posts => {\r\n                setPosts(posts);\r\n            });\r\n        });\r\n    }, []);\r\n    return (\r\n        <>\r\n            {posts.length > 0 && posts.map(post => (\r\n                <Post {...post} />  //passing all the properties from post to Post component\r\n            ))}\r\n        </>\r\n    );\r\n}"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,IAAI,MAAM,SAAS;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE3B,eAAe,SAAUC,SAASA,CAAA,EAAG;EAAAC,EAAA;EAEjC;EACA,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAExCD,SAAS,CAAC,MAAM;IACZW,KAAK,CAAC,4BAA4B,CAAC,CAACC,IAAI,CAACC,QAAQ,IAAI;MACjDA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAACF,IAAI,CAACH,KAAK,IAAI;QAC1BC,QAAQ,CAACD,KAAK,CAAC;MACnB,CAAC,CAAC;IACN,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EACN,oBACIL,OAAA,CAAAE,SAAA;IAAAS,QAAA,EACKN,KAAK,CAACO,MAAM,GAAG,CAAC,IAAIP,KAAK,CAACQ,GAAG,CAACC,IAAI,iBAC/Bd,OAAA,CAACF,IAAI;MAAA,GAAKgB;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,CAAE;IACvB;EAAC,gBACJ,CAAC;AAEX;AAACd,EAAA,CAnBwBD,SAAS;AAAAgB,EAAA,GAAThB,SAAS;AAAA,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}