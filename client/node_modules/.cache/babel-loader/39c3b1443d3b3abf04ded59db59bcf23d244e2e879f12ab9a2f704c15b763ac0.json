{"ast":null,"code":"var _jsxFileName = \"D:\\\\MERN Project\\\\client\\\\src\\\\pages\\\\PostPage.js\",\n  _s = $RefreshSig$();\nimport { useContext, useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { formatISO9075 } from \"date-fns\";\nimport { UserContext } from \"../UserContext\";\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function PostPage() {\n  _s();\n  const [postInfo, setPostInfo] = useState(null);\n  const {\n    userInfo\n  } = useContext(UserContext); //grabbing user info from context\n  const {\n    id\n  } = useParams();\n  useEffect(() => {\n    fetch(`http://localhost:4000/post/${id}`).then(response => {\n      //using .then() we grab the response\n      response.json().then(postInfo => {\n        setPostInfo(postInfo);\n      });\n    });\n  }, []);\n  if (!postInfo) return '';\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"post-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: postInfo.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"time\", {\n      children: formatISO9075(new Date(postInfo.createdAt))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"author\",\n      children: [\"by @\", postInfo.author.username]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), userInfo.id === postInfo.author._id &&\n    /*#__PURE__*/\n    //checking if user id is same as author id, as only the person who has published the article will be able to edit it.\n    _jsxDEV(\"div\", {\n      className: \"edit-row\",\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        className: \"edit-btn\",\n        to: `/edit/${postInfo._id}`,\n        children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n          xmlns: \"http://www.w3.org/2000/svg\",\n          fill: \"none\",\n          viewBox: \"0 0 24 24\",\n          strokeWidth: 1.5,\n          stroke: \"currentColor\",\n          className: \"w-6 h-6\",\n          children: /*#__PURE__*/_jsxDEV(\"path\", {\n            strokeLinecap: \"round\",\n            strokeLinejoin: \"round\",\n            d: \"M16.862 4.487l1.687-1.688a1.875 1.875 0 112.652 2.652L10.582 16.07a4.5 4.5 0 01-1.897 1.13L6 18l.8-2.685a4.5 4.5 0 011.13-1.897l8.932-8.931zm0 0L19.5 7.125M18 14v4.75A2.25 2.25 0 0115.75 21H5.25A2.25 2.25 0 013 18.75V8.25A2.25 2.25 0 015.25 6H10\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this), \"Edit this post\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        className: \"edit-btn\",\n        to: `/deletePost/${postInfo._id}`,\n        children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n          xmlns: \"http://www.w3.org/2000/svg\",\n          fill: \"none\",\n          viewBox: \"0 0 24 24\",\n          \"stroke-width\": \"1.5\",\n          stroke: \"currentColor\",\n          class: \"w-6 h-6\",\n          children: /*#__PURE__*/_jsxDEV(\"path\", {\n            \"stroke-linecap\": \"round\",\n            \"stroke-linejoin\": \"round\",\n            d: \"M14.74 9l-.346 9m-4.788 0L9.26 9m9.968-3.21c.342.052.682.107 1.022.166m-1.022-.165L18.16 19.673a2.25 2.25 0 01-2.244 2.077H8.084a2.25 2.25 0 01-2.244-2.077L4.772 5.79m14.456 0a48.108 48.108 0 00-3.478-.397m-12 .562c.34-.059.68-.114 1.022-.165m0 0a48.11 48.11 0 013.478-.397m7.5 0v-.916c0-1.18-.91-2.164-2.09-2.201a51.964 51.964 0 00-3.32 0c-1.18.037-2.09 1.022-2.09 2.201v.916m7.5 0a48.667 48.667 0 00-7.5 0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this), \"Delete\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"image\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: `http://localhost:4000/${postInfo.cover}`,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      dangerouslySetInnerHTML: {\n        __html: postInfo.content\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n_s(PostPage, \"dwtLtpcNxlpPhwC9d3oEzQOTAVg=\", false, function () {\n  return [useParams];\n});\n_c = PostPage;\nvar _c;\n$RefreshReg$(_c, \"PostPage\");","map":{"version":3,"names":["useContext","useEffect","useState","useParams","formatISO9075","UserContext","Link","jsxDEV","_jsxDEV","PostPage","_s","postInfo","setPostInfo","userInfo","id","fetch","then","response","json","className","children","title","fileName","_jsxFileName","lineNumber","columnNumber","Date","createdAt","author","username","_id","to","xmlns","fill","viewBox","strokeWidth","stroke","strokeLinecap","strokeLinejoin","d","class","src","cover","alt","dangerouslySetInnerHTML","__html","content","_c","$RefreshReg$"],"sources":["D:/MERN Project/client/src/pages/PostPage.js"],"sourcesContent":["import {useContext, useEffect, useState} from \"react\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport {formatISO9075} from \"date-fns\";\r\nimport {UserContext} from \"../UserContext\";\r\nimport {Link} from 'react-router-dom';\r\n\r\nexport default function PostPage() {\r\n  const [postInfo,setPostInfo] = useState(null);\r\n  const {userInfo} = useContext(UserContext);   //grabbing user info from context\r\n  const {id} = useParams();\r\n  useEffect(() => {\r\n    fetch(`http://localhost:4000/post/${id}`)\r\n      .then(response => {   //using .then() we grab the response\r\n        response.json().then(postInfo => {\r\n          setPostInfo(postInfo);\r\n        });\r\n      });\r\n  }, []);\r\n\r\n  if (!postInfo) return '';\r\n\r\n  return (\r\n    <div className=\"post-page\">\r\n      <h1>{postInfo.title}</h1>\r\n      <time>{formatISO9075(new Date(postInfo.createdAt))}</time>\r\n      <div className=\"author\">by @{postInfo.author.username}</div>\r\n      {userInfo.id === postInfo.author._id && ( //checking if user id is same as author id, as only the person who has published the article will be able to edit it.\r\n      \r\n        <div className=\"edit-row\">\r\n          <Link className=\"edit-btn\" to={`/edit/${postInfo._id}`}>\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} stroke=\"currentColor\" className=\"w-6 h-6\">\r\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M16.862 4.487l1.687-1.688a1.875 1.875 0 112.652 2.652L10.582 16.07a4.5 4.5 0 01-1.897 1.13L6 18l.8-2.685a4.5 4.5 0 011.13-1.897l8.932-8.931zm0 0L19.5 7.125M18 14v4.75A2.25 2.25 0 0115.75 21H5.25A2.25 2.25 0 013 18.75V8.25A2.25 2.25 0 015.25 6H10\" />\r\n            </svg>\r\n            Edit this post\r\n          </Link>\r\n\r\n          \r\n          <Link className=\"edit-btn\" to={`/deletePost/${postInfo._id}`}>\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke-width=\"1.5\" stroke=\"currentColor\" class=\"w-6 h-6\">\r\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M14.74 9l-.346 9m-4.788 0L9.26 9m9.968-3.21c.342.052.682.107 1.022.166m-1.022-.165L18.16 19.673a2.25 2.25 0 01-2.244 2.077H8.084a2.25 2.25 0 01-2.244-2.077L4.772 5.79m14.456 0a48.108 48.108 0 00-3.478-.397m-12 .562c.34-.059.68-.114 1.022-.165m0 0a48.11 48.11 0 013.478-.397m7.5 0v-.916c0-1.18-.91-2.164-2.09-2.201a51.964 51.964 0 00-3.32 0c-1.18.037-2.09 1.022-2.09 2.201v.916m7.5 0a48.667 48.667 0 00-7.5 0\" />\r\n            </svg>\r\n            Delete\r\n          </Link>\r\n          \r\n        </div>\r\n\r\n        \r\n        \r\n      )}\r\n      <div className=\"image\">\r\n        <img src={`http://localhost:4000/${postInfo.cover}`} alt=\"\"/>\r\n      </div>\r\n\r\n      {/*If we want to print HTML from a String then in an empty div tag we set dangerouslySetInnerHTML to an object that includes __html to be the string that we want to print. This way it is printed*/}\r\n      <div className=\"content\" dangerouslySetInnerHTML={{__html:postInfo.content}} />\r\n    </div>\r\n  );\r\n}"],"mappings":";;AAAA,SAAQA,UAAU,EAAEC,SAAS,EAAEC,QAAQ,QAAO,OAAO;AACrD,SAAQC,SAAS,QAAO,kBAAkB;AAC1C,SAAQC,aAAa,QAAO,UAAU;AACtC,SAAQC,WAAW,QAAO,gBAAgB;AAC1C,SAAQC,IAAI,QAAO,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,eAAe,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EACjC,MAAM,CAACC,QAAQ,EAACC,WAAW,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAC7C,MAAM;IAACW;EAAQ,CAAC,GAAGb,UAAU,CAACK,WAAW,CAAC,CAAC,CAAG;EAC9C,MAAM;IAACS;EAAE,CAAC,GAAGX,SAAS,CAAC,CAAC;EACxBF,SAAS,CAAC,MAAM;IACdc,KAAK,CAAE,8BAA6BD,EAAG,EAAC,CAAC,CACtCE,IAAI,CAACC,QAAQ,IAAI;MAAI;MACpBA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAACF,IAAI,CAACL,QAAQ,IAAI;QAC/BC,WAAW,CAACD,QAAQ,CAAC;MACvB,CAAC,CAAC;IACJ,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN,IAAI,CAACA,QAAQ,EAAE,OAAO,EAAE;EAExB,oBACEH,OAAA;IAAKW,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxBZ,OAAA;MAAAY,QAAA,EAAKT,QAAQ,CAACU;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACzBjB,OAAA;MAAAY,QAAA,EAAOhB,aAAa,CAAC,IAAIsB,IAAI,CAACf,QAAQ,CAACgB,SAAS,CAAC;IAAC;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eAC1DjB,OAAA;MAAKW,SAAS,EAAC,QAAQ;MAAAC,QAAA,GAAC,MAAI,EAACT,QAAQ,CAACiB,MAAM,CAACC,QAAQ;IAAA;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,EAC3DZ,QAAQ,CAACC,EAAE,KAAKH,QAAQ,CAACiB,MAAM,CAACE,GAAG;IAAA;IAAM;IAExCtB,OAAA;MAAKW,SAAS,EAAC,UAAU;MAAAC,QAAA,gBACvBZ,OAAA,CAACF,IAAI;QAACa,SAAS,EAAC,UAAU;QAACY,EAAE,EAAG,SAAQpB,QAAQ,CAACmB,GAAI,EAAE;QAAAV,QAAA,gBACrDZ,OAAA;UAAKwB,KAAK,EAAC,4BAA4B;UAACC,IAAI,EAAC,MAAM;UAACC,OAAO,EAAC,WAAW;UAACC,WAAW,EAAE,GAAI;UAACC,MAAM,EAAC,cAAc;UAACjB,SAAS,EAAC,SAAS;UAAAC,QAAA,eACjIZ,OAAA;YAAM6B,aAAa,EAAC,OAAO;YAACC,cAAc,EAAC,OAAO;YAACC,CAAC,EAAC;UAAuP;YAAAjB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC5S,CAAC,kBAER;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eAGPjB,OAAA,CAACF,IAAI;QAACa,SAAS,EAAC,UAAU;QAACY,EAAE,EAAG,eAAcpB,QAAQ,CAACmB,GAAI,EAAE;QAAAV,QAAA,gBAC3DZ,OAAA;UAAKwB,KAAK,EAAC,4BAA4B;UAACC,IAAI,EAAC,MAAM;UAACC,OAAO,EAAC,WAAW;UAAC,gBAAa,KAAK;UAACE,MAAM,EAAC,cAAc;UAACI,KAAK,EAAC,SAAS;UAAApB,QAAA,eAC9HZ,OAAA;YAAM,kBAAe,OAAO;YAAC,mBAAgB,OAAO;YAAC+B,CAAC,EAAC;UAAyZ;YAAAjB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChd,CAAC,UAER;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEJ,CAIN,eACDjB,OAAA;MAAKW,SAAS,EAAC,OAAO;MAAAC,QAAA,eACpBZ,OAAA;QAAKiC,GAAG,EAAG,yBAAwB9B,QAAQ,CAAC+B,KAAM,EAAE;QAACC,GAAG,EAAC;MAAE;QAAArB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1D,CAAC,eAGNjB,OAAA;MAAKW,SAAS,EAAC,SAAS;MAACyB,uBAAuB,EAAE;QAACC,MAAM,EAAClC,QAAQ,CAACmC;MAAO;IAAE;MAAAxB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC5E,CAAC;AAEV;AAACf,EAAA,CAnDuBD,QAAQ;EAAA,QAGjBN,SAAS;AAAA;AAAA4C,EAAA,GAHAtC,QAAQ;AAAA,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}